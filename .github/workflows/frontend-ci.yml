name: Frontend CI

on:
  push:
    branches: [prd, master]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [prd, master]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'

jobs:
  test:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./frontend

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test:run

      - name: Run unit tests with coverage
        run: npm run test:coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          directory: ./frontend/coverage
          flags: frontend
          name: frontend-coverage
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build-${{ matrix.node-version }}
          path: |
            frontend/out/
            frontend/.next/
          retention-days: 1

  build-analysis:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs: [test]
    if: github.event_name == 'pull_request'

    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Build with bundle analysis
        run: npm run analyze

      - name: Comment bundle analysis
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            // Bundle analysis results would be processed here
            // This is a placeholder for bundle size analysis

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ“Š Bundle analysis completed. Check artifacts for detailed results.'
            });

  notify:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs: [test, build-analysis]
    if: always()

    steps:
      - name: Determine overall status
        id: status
        run: |
          if [[ "${{ needs.test.result }}" == "success" ]]; then
            echo "status=success" >> $GITHUB_OUTPUT
          elif [[ "${{ needs.test.result }}" == "failure" ]]; then
            echo "status=failure" >> $GITHUB_OUTPUT
          else
            echo "status=cancelled" >> $GITHUB_OUTPUT
          fi

      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ steps.status.outputs.status }}
          fields: repo,message,author,job,ref,workflow
          text: |
            Frontend CI Pipeline Status: ${{ steps.status.outputs.status }}
            Test Status: ${{ needs.test.result }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        if: env.SLACK_WEBHOOK_URL != ''
